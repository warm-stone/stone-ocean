USE stone_ocean;
INSERT INTO t_biographical_notes (id, name, birthday, email, university, graduation_date, sex, skill)
VALUES
    (default , '温其', '1996-08-31', 'hzqsdnu@qq.com', '山东师范大学', '2019-06-01', '男', 'C#, MyBatis, Redis, RabbitMQ, SQLServer , winDbg，Java, Spring，Python，
深度学习，LLM
');

INSERT INTO t_experience (id, biographicId, title, exp, ord)
VALUES
    (default , 1, '数据校对桌面工具', '在财务系统中除了事务保障和幂等处理，往往还需要对数据进行校对来兜底准确性，于是实现了一个拓展性较为良好的数据校对桌面工具', 1),
    (default , 1, '消息中心项目', '消息中心是基于rabbitMq的消息中转项目，提供消息必达、事件发布等服务，实现上订阅方消息互不干扰，自定义重试时间，这种方案的网络抖动时会有内存暴涨的问题，针对此问题实现了对Json消息的配置式内容提取和消息拦截',2),
    (default , 1, '报表项目', '该项目为基于葡萄城报表框架的业务开发，在报表的不断新增和修改中，开发、测试、上线的流程有些低效，因为代码被修改需要充分的测试，于是设计了一套基于约定的前后缀处理入参和返回结果的通用流程，以便缓解重复编码和上线缓慢问题', 3),
    (default , 1, 'ES ORM查询框架项目', '项目中对b端和不同的c端不断的增加查询接口，开发内容重复且容易出错，参考众多ORM框架和现实需要，针对ES的查询设计并实现了一套ORM查询Helper，提供了良好的开发调试帮助和拼写检查等功能，功能上经过了较为完备的单元测试和可信验证，设计上经过两次修改也有了较好的扩充性，取得了较为良好的反响', 4),
    (default , 1, '订单宽表项目', '公司订单业务相对复杂，包含充电、预约、地锁等数十种订单，宽表需求多重多样，且在逐步增加。对该模块进行了整体重构，利用工厂模式、责任链模式、模板方法、动态代理等设计模式，降低了代码的复杂度，提高了稳定性；优化业务处理流程，增加缓存，降低灾难场景对其他模块的冲击；最终使得模块提高了约30%性能表现（可通过监控观察到性能提高）', 5)
   ;


INSERT INTO t_vote4fun_rank_list(title, description, agree_name, disagree_name)
VALUES
    ('变态等级', '不多说了，第二届了，升级！！！', '升级！！！', '守护'),
    ('美食排行', '不多说了，第二届了，升级！！！', '升级！！！', '守护'),
    ('正经榜', '不多说了，第二届了，升级！！！', '升级！！！', '守护'),
    ('正经榜2', '不多说了，第二届了，升级！！！', '升级！！！', '守护'),
    ('正经榜3', '不多说了，第二届了，升级！！！', '升级！！！', '守护')